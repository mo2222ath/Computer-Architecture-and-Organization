// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// PROGRAM		"Quartus Prime"
// VERSION		"Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"
// CREATED		"Sat Oct 26 18:46:29 2019"

module exercise42(
	x,
	Clk,
	Q
);


input wire	x;
input wire	Clk;
output wire	Q;

wire	SYNTHESIZED_WIRE_0;
wire	SYNTHESIZED_WIRE_1;
wire	SYNTHESIZED_WIRE_2;
wire	SYNTHESIZED_WIRE_3;
reg	SYNTHESIZED_WIRE_4;
reg	SYNTHESIZED_WIRE_5;





always@(posedge Clk)
begin
	begin
	SYNTHESIZED_WIRE_5 <= SYNTHESIZED_WIRE_0;
	end
end


always@(posedge Clk)
begin
	begin
	SYNTHESIZED_WIRE_4 <= SYNTHESIZED_WIRE_1;
	end
end

assign	SYNTHESIZED_WIRE_1 = x & SYNTHESIZED_WIRE_2;

assign	SYNTHESIZED_WIRE_0 = SYNTHESIZED_WIRE_3 | SYNTHESIZED_WIRE_4;

assign	SYNTHESIZED_WIRE_3 =  ~SYNTHESIZED_WIRE_5;

assign	SYNTHESIZED_WIRE_2 =  ~SYNTHESIZED_WIRE_4;

assign	Q = SYNTHESIZED_WIRE_5 | SYNTHESIZED_WIRE_4;


endmodule
